name: Build repo packages

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  workflow_dispatch:
  schedule:
    - cron: "00 22 * * *" # 6:00 AM UTC+8

jobs:
  build-docker-image:
    name: Build and publish docker container
    uses: ./.github/workflows/build-builder.yml

  list-aurbuilds:
    name: List AUR Packages
    runs-on: ubuntu-latest
    outputs:
      aur-pkgs: ${{ steps.set-aur-pkgs.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-aur-pkgs
        run: source ./aur-pkgs ; echo "matrix=$(echo ${AUR_PACKAGES} | jq -R -s -c 'split(" ")')" >> $GITHUB_OUTPUT
        shell: bash

  aur-pkgbuild:
    needs:
     - build-docker-image
     - list-aurbuilds
    name: Build AUR package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJson(needs.list-aurbuilds.outputs.aur-pkgs) }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ChimeraOS/chimeraos
      - name: Build packages
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
          docker run --rm -v $(pwd):/workdir --entrypoint=/workdir/aur-pkgs/build-aur-package.sh ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main ${{ matrix.package }}
      - name: Upload Package Archives
        uses: actions/upload-artifact@v4
        with:
            name: AUR-packages
            path: aur-pkgs/*.pkg.tar*

  publish-extra:
    needs:
     - build-docker-image
     - aur-pkgbuild
    name: Create repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
            name: AUR-packages
            path: repo-extra/
      - name: Create repository
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
          docker run --rm -v $(pwd)/repo-extra:/workdir --privileged=true  -u root --entrypoint=/usr/bin/bash \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main \
            -c "repo-add chimera-extra.db.tar.gz *.pkg.tar.*"
      - name: Get time
        id: time
        uses: nanzm/get-time-action@master
        with:
          timeZone: UTC
          format: 'YYYY-MM-DD HH:mm:ss'
      - name: Create release extra
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: repo-extra/*
          name: Chimera Extra Repo at ${{ steps.time.outputs.time }} UTC
          removeArtifacts: true
          tag: chimera-extra
